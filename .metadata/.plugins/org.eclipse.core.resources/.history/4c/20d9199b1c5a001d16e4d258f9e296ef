package psp.temauno.hilos.maquinallenado;

import java.text.DecimalFormat;
/**
 * Botella de agua caracterizada por su identificador único,
 * capcidad máxima, capacidad actual, exceso de llenado
 * y tiempo de llenado
 * @author rafa
 * @version 1.0
 */
public class Botella {
	private int id;
	private int capacidadMaxima;
	private int capacidadActual;
	private int excesoLLenado;
	private long tiempoLlenado;
	private static int numBotellas=0;
	private DecimalFormat df = new DecimalFormat("0.00");
	/**
	 * Constructor especializado para obtener objetos de tipo Botella
	 * con identificador y capacidad máxima
	 * @param capacidadMaxima Capacidad máxima de la botella en ml
	 */
	public Botella(int capacidadMaxima) {
		this.id = ++numBotellas;
		this.capacidadMaxima = capacidadMaxima;
	}
	public int getCapacidadMaxima() {
		return capacidadMaxima;
	}
	/**
	 * Devuelve un valor booleano que indica si la botella está llena (true) o no (false)
	 * @return True para botella llena o False para no llena
	 */
	public boolean estaLlena() {
		return this.capacidadActual == this.capacidadMaxima;
	}
	/**
	 * Simula el proceso de llenado de una botella a partir de los mililitros indicados
	 * como parámetro. Cuando la botella está llena se almacena el exceso de agua utilizado
	 * para el llenado
	 * @param miliLitros Volumen de agua para incorporar a la botella
	 */
	public void llenar(int miliLitros) {
		if(this.capacidadActual<this.capacidadMaxima)
			this.capacidadActual+=miliLitros;
		else {
			this.excesoLLenado = this.capacidadActual - this.capacidadMaxima;
			this.capacidadActual=this.capacidadMaxima;
		}
	}
	/**
	 * Establece el tiempo de llenado de cada botella
	 * @param tiempoLlenado Tiempo en milisegundos
	 */
	public void setTiempoLLenado(long tiempoLlenado) {
		this.tiempoLlenado = tiempoLlenado;
	}
	@Override
	public String toString() {
		return "Botella [id=" + id + ", capacidadMaxima=" + capacidadMaxima + " ml, capacidadActual=" + capacidadActual
				+ " ml, excesoLLenado=" + excesoLLenado + 
				" ml, tiempoLlenado=" + df.format((double)(tiempoLlenado/1000.0)) + " seg.]";
	}
}
